name: Grype scan

on:
  workflow_call:
  push:
    branches: [ "main" ]

jobs:
  sync-subtrees:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Git
        run: |
          git config --global user.name "${{ secrets.GIT_USERNAME }}"
          git config --global user.email "${{ secrets.GIT_EMAIL }}"
  

      - name: Check if URLs file exists
        run: |
          if [ ! -f "onos_links.txt" ]; then
            echo "Error: URLs file not found: onos_links.txt"
            exit 1
          fi

      - name: Process Git Subtrees
        run: |
            while IFS= read -r url; do
            # Extract the last part of the URL to use as the local directory name
              local_dir=$(basename "$url" .git)

              echo "Processing subtree for URL: $url"

                # Check if the directory already exists
                if [ -d "$local_dir" ]; then
                    echo "Directory $local_dir already exists. Updating subtree..."
                    git subtree pull --prefix "$local_dir" "$url" "$REMOTE_BRANCH" --squash
                    if [ $? -ne 0 ]; then
                        echo "Error: Failed to update subtree for URL: $url"
                    else
                        echo "Subtree updated successfully for URL: $url"
                    fi
                else
                    echo "Adding new subtree..."
                    git subtree add --prefix "$local_dir" "$url" "$REMOTE_BRANCH" --squash
                    if [ $? -ne 0 ]; then
                        echo "Error: Failed to add subtree for URL: $url"
                    else
                        echo "Subtree added successfully for URL: $url"
                    fi
                fi
            done < onos_links.txt
    
  Grype-Scan:
    needs: sync-subtrees
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    runs-on: ubuntu-latest
    steps:
    - name: Check out the code
      uses: actions/checkout@v3
      
    - name: Running a scan with a json file as an output
      uses: anchore/scan-action@v3
      id: scan1
      with:
        fail-build: false
        add-cpes-if-none: true
        output-format:  json
        
    - name: Running a scan with a sarif file as an output
      uses: anchore/scan-action@v3
      id: scan2
      with:
        fail-build: false
        add-cpes-if-none: true
        output-format:  sarif
        
    - name: Save the json vulnerability report to an artifact
      uses: actions/upload-artifact@master
      if: always()
      with:
        name: grype_results
        path: ${{ steps.scan1.outputs.json }}  
    
    - name: Upload vulnerability report to github security scanning
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: ${{ steps.scan2.outputs.sarif }}  
    